[[_framework_and_test_suite_components]]
==== Connector Testing Framework Components

All functional test cases classes must extend from a FunctionalTestParent, as explained in the Connector Testing Framework documentation. This functional test parent is kept within the connector testing framework, which can be extended if further behaviour is required.

*AbstractTestCase.java* is found within _org.mule.tools.devkit.ctf.junit_ and implements all the initialization and shut down of the CTF by means of @BeforeClass and @AfterClass methods. *Extending from this class is mandatory*, since it assures the correct use of the CTF. In case a sub-parent is needed, it must be named as *<ConnectorName>TestCase, which will extend from AbstractTestCase and add the required behaviour, such as @Before and @After methods.

Every test case needs to be named as <OperationName>TestCases. These naming conventions avoid Maven to automatically run test cases, since tests require credentials and therefore automatically running them without the proper set of credentials will produce tests to fail.

===== <OperationName>TestCases Class

Each operation in the connector has an *<OperationName>TestCases.java* class that contains its related test cases.

[source,java]
----

import org.mule.tools.devkit.ctf.junit.FunctionalTests;

public class <OperationName>TestCases extends AbstractTestCase {

   // private attributes used as auxiliary fields for storing test run values
   private Integer leadRecordId;

   // Use to create required data for the test.
   @Before
   public void setUp() throws Exception {
     ...
   }

   // returns the sandbox to its original state
   @After
   public void tearDown() throws Exception {
      ...
   }

   //Method that invokes the connector operation under test and asserts on the return value.
   @Category({FunctionalTests.class})
   @Test
   public void test<operationName>() {
      try {
         ...
      } catch (Exception e) {
        //Manage exception accordingly
      }
   }
}
----

The exception might be managed within the test case if the required information is available or it might be thrown.

===== Test Resources

. *automation-credentials.properties* stores the connector credentials and authenticated user related information. It is mandatory to have this file within src/test/resources.
. *required-libraries.properties* stores the list of required external Jars. This file is only required if external Jars are needed.

Both files need to be remove prior committing your changes.

===== Test Development Environment Set Up

After building a connector, add *target/generated-sources/mule* to the project build path. You may need to add other generated sources to the build path depending on the connector (such as target/generated-sources/cxf).

If a connector requires a Mule Enterprise Edition to run, add the *muleLicenseKey.lic* to the *src/test/resources* folder and *remove it* prior to committing your changes.

===== Packages and Files

Test files need to be kept in specific packages as follows:

. *org.mule.modules.<connector-project>.automation.testrunners* contains the test runner (FunctionalTestSuite).
. *org.mule.modules.<connector-project>.automation.testcases* contains the functional test cases exclusively.
. *<connector-project>/src/test/resources* contains the credentials file and the required libraries file, if needed.

===== Keeping Headers Updated
Change the connector version to current to avoid breaking the configuration XML file. For example from: _`http://www.mulesoft.org/schema/mule/taleo/1.0-SNAPSHOT/mule-taleo.xsd`_ to: _`http://www.mulesoft.org/schema/mule/taleo/current/mule-taleo.xsd`_.
