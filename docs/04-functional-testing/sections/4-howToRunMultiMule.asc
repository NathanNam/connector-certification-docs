[[_how_to_run_multi_mule]]
==== How to run a connector in Multi-Mule Runtime Environments

One critical point within the certification process and automation testing. In order to assure the correct behaviour of the connector when deployed within different Mule runtime environments.

This process assures that the entire set of operations of the connector execute in new Mule runtimes.

===== Required Test configurations

The connector must be tested with all available Mule runtimes environments from its MinMuleVersion to the latest runtime (MinMuleVersion is a parameter specifying which is the minimum supported Mule runtime for a given connector).

. _Mule Runtimes:_ If a connector does not require an Enterprise Mule Runtime (_i.e._ it is not Premium nor Select) it must use *Mule Community Edition Runtimes*, such as 3.5.0, 3.6.0 or 3.7.0. Otherwise, it must use *Mule Enterprise Edition Runtimes*, such as 3.5.3 or 3.6.2.

. _Java Versions:_ Every Mule runtime environment needs to be bind with a particular Java version as follows: Mule runtimes 3.5.X must use Java 1.6, Mule runtimes 3.6.X must use Java 1.7 and Mule runtimes 3.7.X must use Java 1.8. This can be achieved by configuring the _wrapper.comf_ file within the Mule runtime _conf_ directory.

===== Testing using CTF

The Connector Testing Framework allows to run test suites in a specific Mule runtime environment, as explained https://github.com/mulesoft/connector-testing-framework[here].

Two extra test properties need to be added when running a test suite from the command line:

. Deployment Profile: By using _-Ddeploymentprofile=local_, CTF will run the test suite in a remote Mule runtime environment.
. Mule Directory: By using _-Dmuledirectory:<mule-directory>_, CTF will use the available mule runtime to run a test suite if _-Ddeploymentprofile=local_ is used.
