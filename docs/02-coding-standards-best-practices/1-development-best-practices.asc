[[_coding_standars_and_best_practices]]
== Coding Standards and Best Practices

Development best practices and coding standards have been learned within the connector development community over time, leading to improve the quality of connectors. During the cerfitication process, most of these practices and standars are checked through automated tools, such as SonarQube.


=== Anypoint™ Connector DevKit Version

The last version of Anypoint™ Connector DevKit must be used to develop your connector. As of Jun 2015, the latest stable Devkit version is 3.7.0.

DevKit 3.7.x assures that a connector will be compatible with Mule ESB 3.5.x, Mule ESB 3.6.x and Mule ESB 3.7.x. However, external libraries employed by the connector might have conflicts with different Mule ESB versions. Samity checks are mandatory for every Mule ESB Version.

=== Connector Category

There are four types of categories with different support policies:

* Premium
* Select
* Standard
* Community

Further information about connector categories can be found http://www.mulesoft.org/documentation/display/current/Anypoint+Connectors#AnypointConnectors-ConnectorCategories[here].

A connector should define its category in the POM properties:

[source, xml]
----
<groupId>org.mule.modules</groupId>
<artifactId>mule-module-sample-connector</artifactId>
<version>1.0.0-SNAPSHOT</version>
<name>Mule Sample Connector </name>
<packaging>pom/packaging>

<properties>
    <category>Select</category>
    <licensePath>LICENSE.md</licensePath>
    <devkit.studio.package.skip>false</devkit.studio.package.skip>
</properties>
----

If a connector is categorized under **Select**, then the connector code must include the **@RequiresEnterpriseLicense** annotation.

If a connector is categorized under **Premium**, then the connector code must include both the **@RequiresEnterpriseLicense** and the **@RequiresEntitlement** annotations.

==== Sources Deployment

For Standard connectors, which are deployed to public repositories but its source code is closed, the following plugin must be added to the <build> element in order to avoid sources deployment:

[source, xml]
----
<plugin>
    <artifactId>maven-source-plugin</artifactId>
    <version>2.1.2</version>
    <executions>
        <execution>
            <id>attach-sources</id>
            <phase>none</phase>
        </execution>
    </executions>
</plugin>
----

==== Distribution Management

Configuration of the distributionManagement element varies from connector to connector, depending on its category and the project structure.

1. Community and Standard:
+
[source, xml]
----
<distributionManagement>
    <repository>
        <id>mulesoft-releases</id>
        <name>MuleSoft Repository</name>
        <url>http://repository-master.mulesoft.org/releases/</url>
    </repository>
    <snapshotRepository>
        <id>mulesoft-snapshots</id>
        <name>MuleSoft Snapshot Repository</name>
        <url>http://repository-master.mulesoft.org/snapshots/</url>
        <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
</distributionManagement>
----

2. Select and Premium:
+
[source, xml]
----
<distributionManagement>
    <repository>
        <id>mule-ee-releases</id>
        <name>MuleEE Releases Repository</name>
        <url>https://repository-master.mulesoft.org/nexus/content/repositories/releases-ee/</url>
    </repository>
    <snapshotRepository>
        <id>mule-ee-snapshots</id>
        <name>MuleEE Snapshots Repository</name>
        <url>https://repository-master.mulesoft.org/nexus/content/repositories/ci-snapshots/</url>
        <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
</distributionManagement>
----

3. Multi-module Select and Premium:

If a Premium connector is part of a multi-module project, before the release we should verify that:
The connector's module is deployed to the private nexus (same distribution management as described above for Standard,  ci-releases).
Parent pom of the connectors project has configured the distribution management for public or Community connectors.

For example, in a project with a parent pom, a utils module and a connector module, if and only if the connector is Standard or Premium, then the parent pom should declared the public distributionManagement, and it should be override in the connectors pom with the private distributionManagement.

==== Distribution Management Matrix:

[width="40%",frame="topbot",options="header,footer"]
|======================
| | Community & Standard | Select & Premium
| Single Module    | http://repository-master.mulesoft.org/releases/     | https://repository-master.mulesoft.org/nexus/content/repositories/releases-ee/
| Multi Module     | Parent:                                             | Parent:
|                  | http://repository-master.mulesoft.org/releases/     | http://repository-master.mulesoft.org/releases/
|                  | Connector:                                          | Connector:
|                  | No override, same as parent                         | https://repository-master.mulesoft.org/nexus/content/repositories/releases-ee/
|======================

=== Code Conventions

This subsection covers the following areas:

* Maven Conventions and Setup
* DevKit Standards and Best Practices
* Connector Demo Example
* Third Party Licenses

include::sections/1-maven-convention-setup.asc[]
include::sections/2-devkit-standars-best-practices.asc[]
include::sections/3-connector-demo-example.asc[]
include::sections/4-third-party-licenses.asc[]
