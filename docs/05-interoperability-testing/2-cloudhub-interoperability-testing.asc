[[_cloudhub_interoperability]]
== CloudHub Interoperability
These items apply exclusively for connectors supporting OAuth authentication.

CloudHub's Object Store is stateless (behaves like a proxy). This behavior is different from an Object Store in a local Mule application. For this reason, a simple application using OAuth must be run on the CloudHub platform to verify its correct behavior.

First, check that the callback URL on the application redirects to the URL set on the config­ref.

Make sure the domain on the Deploy to CloudHub dialog matches the one set for the callback URL.

*Example*

image::images/qa-guidelines-cloudhub-1.png[]

[source,xml]
----
<facebook:config-with-oauth name="Facebook" doc:name="Facebook"
consumerKey="206589772847469" consumerSecret="14b75847e7c9cca4159b3314b39fcd43">
    <facebook:oauth-callback-config domain="facebookoauth.stg.cloudhub.io"
    localPort="${http.port}" path="callback"/>
</facebook:config-with-oauth>
----

Also make sure that the Mule version is the one under test.

---

*Facebook Example*

[source,xml]
----
<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
xmlns:http="http://www.mulesoft.org/schema/mule/http"
xmlns:facebook="http://www.mulesoft.org/schema/mule/facebook"
xmlns="http://www.mulesoft.org/schema/mule/core"
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
       xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-current.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/facebook
       http://www.mulesoft.org/schema/mule/facebook/current/mule-facebook.xsd
       http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

    <facebook:config-with-oauth name="Facebook" doc:name="Facebook" consumerKey="${facebook.consumerKey}" consumerSecret="${facebook.consumerSecret}">
        <facebook:oauth-callback-config domain="facebookoauth.stg.cloudhub.io" localPort="${http.port}" path="callback"/>
    </facebook:config-with-oauth>

    <flow name="3.5.0-facebook-oauthFlow1" doc:name="3.5.0-facebook-oauthFlow1">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" doc:name="HTTP" path="authFacebook" />
        <facebook:authorize config-ref="Facebook" doc:name="Facebook"/>
        <facebook:get-user config-ref="Facebook" doc:name="Facebook" user="hernan.wittemoller"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
    </flow>
</mule>
----

Note: remotePort should not be part of the config, and that the ${http.port} placeholder is to be used for ports.

---

*Salesforce Example*

. Generate keystore.jks running this command: *keytool -genkey -alias mule -keyalg RSA -keystore keystore.jks*
. Place keystore.jks it in src/resources.

[source,xml]
----
<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:https="http://www.mulesoft.org/schema/mule/https"
       xmlns:http="http://www.mulesoft.org/schema/mule/http"
xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns="http://www.mulesoft.org/schema/mule/core"
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
       xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.mulesoft.org/schema/mule/https
http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd">
￼￼38
<sfdc:config-with-oauth name="Salesforce__OAuth_"
consumerKey="${salesforce.consumerKey}"
consumerSecret="${salesforce.consumerSecret}" doc:name="Salesforce (OAuth)" >
        <sfdc:oauth-callback-config domain="salesforceoauth.qa2.cloudhub.io" localPort="${https.port}" path="oauthcallback" connector-ref="https_connector"/>
    </sfdc:config-with-oauth>
    <https:connector name="https_connector" cookieSpec="netscape" validateConnections="true" sendBufferSize="0" receiveBufferSize="0" receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000" socketSoLinger="0" doc:name="HTTP-HTTPS">
        <https:tls-key-store path="keystore.jks" keyPassword="password" storePassword="password"/>
    </https:connector>
    <flow name="3.5.0-everest-oauth-salesforce-twoFlow1" doc:name="3.5.0-everest-oauth-salesforce-twoFlow1">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" doc:name="HTTP" path="oauth"/>
        <sfdc:authorize config-ref="Salesforce__OAuth_" display="POPUP" doc:name="Salesforce"/>
        <sfdc:get-user-info config-ref="Salesforce__OAuth_" doc:name="Salesforce"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="Done" doc:name="Set Payload"/>
    </flow>
</mule>
----
